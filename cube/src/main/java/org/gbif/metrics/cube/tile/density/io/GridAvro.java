/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.gbif.metrics.cube.tile.density.io;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class GridAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GridAvro\",\"namespace\":\"org.gbif.metrics.cube.tile.density.io\",\"fields\":[{\"name\":\"cells\",\"type\":{\"type\":\"map\",\"values\":\"int\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.Integer> cells;

  /**
   * Default constructor.
   */
  public GridAvro() {}

  /**
   * All-args constructor.
   */
  public GridAvro(java.util.Map<java.lang.CharSequence,java.lang.Integer> cells) {
    this.cells = cells;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return cells;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: cells = (java.util.Map<java.lang.CharSequence,java.lang.Integer>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'cells' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.Integer> getCells() {
    return cells;
  }

  /**
   * Sets the value of the 'cells' field.
   * @param value the value to set.
   */
  public void setCells(java.util.Map<java.lang.CharSequence,java.lang.Integer> value) {
    this.cells = value;
  }

  /** Creates a new GridAvro RecordBuilder */
  public static org.gbif.metrics.cube.tile.density.io.GridAvro.Builder newBuilder() {
    return new org.gbif.metrics.cube.tile.density.io.GridAvro.Builder();
  }
  
  /** Creates a new GridAvro RecordBuilder by copying an existing Builder */
  public static org.gbif.metrics.cube.tile.density.io.GridAvro.Builder newBuilder(org.gbif.metrics.cube.tile.density.io.GridAvro.Builder other) {
    return new org.gbif.metrics.cube.tile.density.io.GridAvro.Builder(other);
  }
  
  /** Creates a new GridAvro RecordBuilder by copying an existing GridAvro instance */
  public static org.gbif.metrics.cube.tile.density.io.GridAvro.Builder newBuilder(org.gbif.metrics.cube.tile.density.io.GridAvro other) {
    return new org.gbif.metrics.cube.tile.density.io.GridAvro.Builder(other);
  }
  
  /**
   * RecordBuilder for GridAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GridAvro>
    implements org.apache.avro.data.RecordBuilder<GridAvro> {

    private java.util.Map<java.lang.CharSequence,java.lang.Integer> cells;

    /** Creates a new Builder */
    private Builder() {
      super(org.gbif.metrics.cube.tile.density.io.GridAvro.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.gbif.metrics.cube.tile.density.io.GridAvro.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing GridAvro instance */
    private Builder(org.gbif.metrics.cube.tile.density.io.GridAvro other) {
            super(org.gbif.metrics.cube.tile.density.io.GridAvro.SCHEMA$);
      if (isValidValue(fields()[0], other.cells)) {
        this.cells = data().deepCopy(fields()[0].schema(), other.cells);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'cells' field */
    public java.util.Map<java.lang.CharSequence,java.lang.Integer> getCells() {
      return cells;
    }
    
    /** Sets the value of the 'cells' field */
    public org.gbif.metrics.cube.tile.density.io.GridAvro.Builder setCells(java.util.Map<java.lang.CharSequence,java.lang.Integer> value) {
      validate(fields()[0], value);
      this.cells = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'cells' field has been set */
    public boolean hasCells() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'cells' field */
    public org.gbif.metrics.cube.tile.density.io.GridAvro.Builder clearCells() {
      cells = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public GridAvro build() {
      try {
        GridAvro record = new GridAvro();
        record.cells = fieldSetFlags()[0] ? this.cells : (java.util.Map<java.lang.CharSequence,java.lang.Integer>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
